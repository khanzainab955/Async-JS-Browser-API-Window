What is the XMLHttpRequest Object?
The XMLHttpRequest object is a built-in JavaScript object that provides an interface to interact with servers. It allows sending HTTP or HTTPS requests directly from the browser to the server and handling the responses.
This object is most commonly used in AJAX (Asynchronous JavaScript and XML) to exchange data between a web browser and a server without requiring a full page reload.
How is it used in AJAX?
In AJAX, XMLHttpRequest is used to send requests to the server asynchronously and retrieve data (e.g., text, JSON, or XML). Here's how it works step by step:
1. Create an XMLHttpRequest object:
o This is the starting point for AJAX communication.
javascript
Copy code
let xhr = new XMLHttpRequest();
2. Open a connection to the server:
o Specify the request method (GET or POST), the URL, and whether the request should be asynchronous.
javascript
Copy code
xhr.open('GET', 'https://api.example.com/data', true);
3. Set request headers (if needed):
o Use this step to configure headers, such as Content-Type for POST requests.
javascript
Copy code
xhr.setRequestHeader('Content-Type', 'application/json');
4. Define a callback for the response:
o The onreadystatechange or onload function is used to handle the server's response.
javascript
Copy code
xhr.onreadystatechange = function () {
    if (xhr.readyState === 4 && xhr.status === 200) {
        console.log(xhr.responseText); // Process the response data
    }
};
5. Send the request:
o Data can be sent along with the request in the case of POST or left empty for GET.
javascript
Copy code
xhr.send();
Example of XMLHttpRequest in AJAX
Here’s a simple example:
javascript
Copy code
let xhr = new XMLHttpRequest();
xhr.open('GET', 'https://jsonplaceholder.typicode.com/posts', true);

xhr.onreadystatechange = function () {
    if (xhr.readyState === 4) { // Request finished
        if (xhr.status === 200) { // Success
            console.log(JSON.parse(xhr.responseText)); // Parse and log the JSON response
        } else {
            console.error('Error: ' + xhr.status); // Log any errors
        }
    }
};

xhr.send();
Key Properties and Methods of XMLHttpRequest
* Properties:
o readyState: Indicates the state of the request (0 to 4).
o status: HTTP status code of the response.
o responseText: Response as a string.
o responseXML: Response as an XML document (if applicable).
* Methods:
o open(method, url, async): Initializes the request.
o send(data): Sends the request.
o setRequestHeader(header, value): Sets custom headers.
Advantages of Using XMLHttpRequest in AJAX
* Asynchronous operations improve user experience by not blocking the UI.
* Partial page updates reduce bandwidth usage and improve performance.
* Ability to fetch data dynamically from the server.
Limitations
* The XMLHttpRequest API can be cumbersome compared to modern alternatives like the Fetch API or libraries like Axios.
* Limited error handling capabilities.


